#! /usr/bin/bash
pid=$1

if test "$pid" == "-1"; then 
    exit 0
fi
iconCacheLocation="$HOME/.config/eww/scripts/iconCache"
comm=$(ps --noheader -q "$pid" -o comm=)
exe=$(ps --noheader -q "$pid" -o exe=)

commParent=$(ps --noheader -q $(ps --noheader -q "$pid" -o ppid=) -o comm=)
exeParent=$(ps --noheader -q $(ps --noheader -q "$pid" -o ppid=) -o exe=)

checkIconCache () {
    local commandName=$1
    local iconCachePath="$iconCacheLocation/$commandName"
    if test -f "$iconCachePath"; then
        #chached icon exists
        echo "$(head -n 1 "$iconCachePath")"
    fi
}

cacheIcon () {
    local commandName=$1
    local pathToIcon=$2
    local finalPath="$iconCacheLocation/$commandName"
    echo "$pathToIcon" > "$finalPath"
}

mainCatagory=( "arcticons-dark" )

attempts=(  "128x128"
            "192x192"
            "256x256"
            "384x384"
            "512x512"
            "96x96"
            "72x72"
            "64x64"
            "48x48"
            "36x36"
            "32x32"
            "24x24"
            "22x22"
            "16x16"
            "scalable"
            "pixmaps"
            "symbolic")

findBestFit () {
    local allPaths=$1
    local output=$(grep -i "$attemptFindString" <<< "$allPaths")
    output=""
    for catagory in "${mainCatagory[@]}"; do
        tempLines=$(grep "$catagory" <<< "$allPaths")
        if test "$tempLines" != ""; then
            allPaths=$tempLines
            break
        fi
    done
    for attempt in "${attempts[@]}"; do
        output=$(grep "${attempt}" <<< "$allPaths" | head -n 1)
        if test "$output" != ""; then
            break
        fi
    done
    echo "$output"
}

getFilePath () {
    local searchString=$1
    local output=$(grep -Ri "/usr/share/applications/" -e "$searchString" | awk -F: '{ print $1 }' | sed -n "1"p)
    echo "$output"
}

getIconPath () {
    local path=$1
    local output=$(grep -i "$path" -e "Icon=" | awk -F= '{ print $2 }')
    echo "$output"
}

getIconPaths () {
    local icon=$1
    local output=$(find /usr/share/icons/ -iname "*${icon}.*")
    local output2=$(find /usr/share/pixmaps/ -iname "*${icon}.*")
    if test "$output" != ""; then
        echo "$output"
    fi
    if test "$output2" != ""; then
        echo "$output2"
    fi
}





# program start ------------------------------

# checking cache dir
cacheIconPath=$(checkIconCache "$comm")
if test "$cacheIconPath" != ""; then
    echo "$cacheIconPath"
    exit 0
fi

cacheIconPath=$(checkIconCache "$commParent")
if test "$cacheIconPath" != ""; then
    echo "$cacheIconPath"
    exit 0
fi
# nothing found in cache


filePath=$(getFilePath "$comm")
if test "$filePath" != ""; then
    iconName=$(getIconPath "$filePath")
else
    filePath=$(getFilePath "$exe")
    if test "$filePath" != ""; then
        iconName=$(getIconPath "$filePath")
    fi
fi

if test "$iconName" != ""; then
    allIconPaths=$(getIconPaths "$iconName")
fi
if test "$allIconPaths" != ""; then
    output=$(findBestFit "$allIconPaths")
fi
if test "$output" != ""; then
    echo "$output"
    cacheIcon "$comm" "$output"
    exit 0
fi

# second run with parrent comm
filePath=$(getFilePath "$commParent")
if test "$filePath" != ""; then
    iconName=$(getIconPath "$filePath")
else
    filePath=$(getFilePath "$exeParent")
    if test "$filePath" != ""; then
        iconName=$(getIconPath "$filePath")
    fi
fi

if test "$iconName" != ""; then
    allIconPaths=$(getIconPaths "$iconName")
fi
if test "$allIconPaths" != ""; then
    output=$(findBestFit "$allIconPaths")
fi
if test "$output" != ""; then
    echo "$output"
    cacheIcon "$commParent" "$output"
    exit 0
fi
